// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`"esModule" option should work and when the "injectType" option is "linkTag" and CommonJS module syntax used: DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<link rel=\\"stylesheet\\" href=\\"es-modules.css\\"></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work and when the "injectType" option is "linkTag" and CommonJS module syntax used: errors 1`] = `Array []`;

exports[`"esModule" option should work and when the "injectType" option is "linkTag" and CommonJS module syntax used: warnings 1`] = `Array []`;

exports[`"esModule" option should work and when the "injectType" option is "linkTag" and ES module syntax used: DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<link rel=\\"stylesheet\\" href=\\"es-modules.css\\"></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work and when the "injectType" option is "linkTag" and ES module syntax used: errors 1`] = `Array []`;

exports[`"esModule" option should work and when the "injectType" option is "linkTag" and ES module syntax used: warnings 1`] = `Array []`;

exports[`"esModule" option should work and when the "injectType" option is "linkTag": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<link rel=\\"stylesheet\\" href=\\"es-modules.css\\"></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work and when the "injectType" option is "linkTag": errors 1`] = `Array []`;

exports[`"esModule" option should work and when the "injectType" option is "linkTag": warnings 1`] = `Array []`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "lazySingletonStyleTag" and namedExport is "false": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
</head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{
	\\"locals\\": {
		\\"foo\\": \\"EwkYfSlfnYBz8E2xTBZva\\",
		\\"bar\\": \\"_3TzX9kdhbEM9NjFT_lLbK_\\",
		\\"baz\\": \\"_2zHxuubfFrOL9GmW-Gbppt\\"
	}
}
============================

EXPORTED allImports:
============================
{
	\\"default\\": {
		\\"locals\\": {
			\\"foo\\": \\"EwkYfSlfnYBz8E2xTBZva\\",
			\\"bar\\": \\"_3TzX9kdhbEM9NjFT_lLbK_\\",
			\\"baz\\": \\"_2zHxuubfFrOL9GmW-Gbppt\\"
		}
	}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "lazySingletonStyleTag" and namedExport is "false": errors 1`] = `Array []`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "lazySingletonStyleTag" and namedExport is "false": warnings 1`] = `Array []`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "lazySingletonStyleTag" and namedExport is "true" and exportOnlyLocals in css-loader enabled: DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
</head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"bar\\": \\"_3TzX9kdhbEM9NjFT_lLbK_\\",
	\\"baz\\": \\"_2zHxuubfFrOL9GmW-Gbppt\\",
	\\"foo\\": \\"EwkYfSlfnYBz8E2xTBZva\\",
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "lazySingletonStyleTag" and namedExport is "true" and exportOnlyLocals in css-loader enabled: errors 1`] = `Array []`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "lazySingletonStyleTag" and namedExport is "true" and exportOnlyLocals in css-loader enabled: warnings 1`] = `
Array [
  "ModuleDependencyWarning: export 'default' (imported as 'content') was not found in '!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./es-modules.css' (possible exports: bar, baz, foo)",
  "ModuleDependencyWarning: export 'default' (imported as 'content') was not found in '!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./es-modules.css' (possible exports: bar, baz, foo)",
  "ModuleDependencyWarning: export 'default' (imported as 'content') was not found in '!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./es-modules.css' (possible exports: bar, baz, foo)",
  "ModuleDependencyWarning: export 'default' (imported as 'content') was not found in '!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./es-modules.css' (possible exports: bar, baz, foo)",
]
`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "lazySingletonStyleTag" and namedExport is "true": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
</head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"bar\\": \\"_3TzX9kdhbEM9NjFT_lLbK_\\",
	\\"baz\\": \\"_2zHxuubfFrOL9GmW-Gbppt\\",
	\\"foo\\": \\"EwkYfSlfnYBz8E2xTBZva\\",
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "lazySingletonStyleTag" and namedExport is "true": errors 1`] = `Array []`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "lazySingletonStyleTag" and namedExport is "true": warnings 1`] = `Array []`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "lazyStyleTag" and namedExport is "false": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
</head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{
	\\"locals\\": {
		\\"foo\\": \\"EwkYfSlfnYBz8E2xTBZva\\",
		\\"bar\\": \\"_3TzX9kdhbEM9NjFT_lLbK_\\",
		\\"baz\\": \\"_2zHxuubfFrOL9GmW-Gbppt\\"
	}
}
============================

EXPORTED allImports:
============================
{
	\\"default\\": {
		\\"locals\\": {
			\\"foo\\": \\"EwkYfSlfnYBz8E2xTBZva\\",
			\\"bar\\": \\"_3TzX9kdhbEM9NjFT_lLbK_\\",
			\\"baz\\": \\"_2zHxuubfFrOL9GmW-Gbppt\\"
		}
	}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "lazyStyleTag" and namedExport is "false": errors 1`] = `Array []`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "lazyStyleTag" and namedExport is "false": warnings 1`] = `Array []`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "lazyStyleTag" and namedExport is "true" and exportOnlyLocals in css-loader enabled: DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
</head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"bar\\": \\"_3TzX9kdhbEM9NjFT_lLbK_\\",
	\\"baz\\": \\"_2zHxuubfFrOL9GmW-Gbppt\\",
	\\"foo\\": \\"EwkYfSlfnYBz8E2xTBZva\\",
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "lazyStyleTag" and namedExport is "true" and exportOnlyLocals in css-loader enabled: errors 1`] = `Array []`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "lazyStyleTag" and namedExport is "true" and exportOnlyLocals in css-loader enabled: warnings 1`] = `
Array [
  "ModuleDependencyWarning: export 'default' (imported as 'content') was not found in '!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./es-modules.css' (possible exports: bar, baz, foo)",
  "ModuleDependencyWarning: export 'default' (imported as 'content') was not found in '!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./es-modules.css' (possible exports: bar, baz, foo)",
  "ModuleDependencyWarning: export 'default' (imported as 'content') was not found in '!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./es-modules.css' (possible exports: bar, baz, foo)",
  "ModuleDependencyWarning: export 'default' (imported as 'content') was not found in '!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./es-modules.css' (possible exports: bar, baz, foo)",
]
`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "lazyStyleTag" and namedExport is "true": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
</head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"bar\\": \\"_3TzX9kdhbEM9NjFT_lLbK_\\",
	\\"baz\\": \\"_2zHxuubfFrOL9GmW-Gbppt\\",
	\\"foo\\": \\"EwkYfSlfnYBz8E2xTBZva\\",
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "lazyStyleTag" and namedExport is "true": errors 1`] = `Array []`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "lazyStyleTag" and namedExport is "true": warnings 1`] = `Array []`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "singletonStyleTag" and namedExport is "false": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.EwkYfSlfnYBz8E2xTBZva {
  color: red;
}

._3TzX9kdhbEM9NjFT_lLbK_ {
  color: blue;
}

._2zHxuubfFrOL9GmW-Gbppt {
  color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{
	\\"foo\\": \\"EwkYfSlfnYBz8E2xTBZva\\",
	\\"bar\\": \\"_3TzX9kdhbEM9NjFT_lLbK_\\",
	\\"baz\\": \\"_2zHxuubfFrOL9GmW-Gbppt\\"
}
============================

EXPORTED allImports:
============================
{
	\\"default\\": {
		\\"foo\\": \\"EwkYfSlfnYBz8E2xTBZva\\",
		\\"bar\\": \\"_3TzX9kdhbEM9NjFT_lLbK_\\",
		\\"baz\\": \\"_2zHxuubfFrOL9GmW-Gbppt\\"
	}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "singletonStyleTag" and namedExport is "false": errors 1`] = `Array []`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "singletonStyleTag" and namedExport is "false": warnings 1`] = `Array []`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "singletonStyleTag" and namedExport is "true" and exportOnlyLocals in css-loader enabled: DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
</head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"bar\\": \\"_3TzX9kdhbEM9NjFT_lLbK_\\",
	\\"baz\\": \\"_2zHxuubfFrOL9GmW-Gbppt\\",
	\\"foo\\": \\"EwkYfSlfnYBz8E2xTBZva\\",
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "singletonStyleTag" and namedExport is "true" and exportOnlyLocals in css-loader enabled: errors 1`] = `Array []`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "singletonStyleTag" and namedExport is "true" and exportOnlyLocals in css-loader enabled: warnings 1`] = `
Array [
  "ModuleDependencyWarning: export 'default' (imported as 'content') was not found in '!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./es-modules.css' (possible exports: bar, baz, foo)",
  "ModuleDependencyWarning: export 'default' (imported as 'content') was not found in '!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./es-modules.css' (possible exports: bar, baz, foo)",
  "ModuleDependencyWarning: export 'default' (imported as 'content') was not found in '!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./es-modules.css' (possible exports: bar, baz, foo)",
]
`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "singletonStyleTag" and namedExport is "true": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.EwkYfSlfnYBz8E2xTBZva {
  color: red;
}

._3TzX9kdhbEM9NjFT_lLbK_ {
  color: blue;
}

._2zHxuubfFrOL9GmW-Gbppt {
  color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"bar\\": \\"_3TzX9kdhbEM9NjFT_lLbK_\\",
	\\"baz\\": \\"_2zHxuubfFrOL9GmW-Gbppt\\",
	\\"foo\\": \\"EwkYfSlfnYBz8E2xTBZva\\",
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "singletonStyleTag" and namedExport is "true": errors 1`] = `Array []`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "singletonStyleTag" and namedExport is "true": warnings 1`] = `Array []`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "styleTag" and namedExport is "false": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.EwkYfSlfnYBz8E2xTBZva {
  color: red;
}

._3TzX9kdhbEM9NjFT_lLbK_ {
  color: blue;
}

._2zHxuubfFrOL9GmW-Gbppt {
  color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{
	\\"foo\\": \\"EwkYfSlfnYBz8E2xTBZva\\",
	\\"bar\\": \\"_3TzX9kdhbEM9NjFT_lLbK_\\",
	\\"baz\\": \\"_2zHxuubfFrOL9GmW-Gbppt\\"
}
============================

EXPORTED allImports:
============================
{
	\\"default\\": {
		\\"foo\\": \\"EwkYfSlfnYBz8E2xTBZva\\",
		\\"bar\\": \\"_3TzX9kdhbEM9NjFT_lLbK_\\",
		\\"baz\\": \\"_2zHxuubfFrOL9GmW-Gbppt\\"
	}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "styleTag" and namedExport is "false": errors 1`] = `Array []`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "styleTag" and namedExport is "false": warnings 1`] = `Array []`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "styleTag" and namedExport is "true" and exportOnlyLocals in css-loader enabled: DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
</head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"bar\\": \\"_3TzX9kdhbEM9NjFT_lLbK_\\",
	\\"baz\\": \\"_2zHxuubfFrOL9GmW-Gbppt\\",
	\\"foo\\": \\"EwkYfSlfnYBz8E2xTBZva\\",
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "styleTag" and namedExport is "true" and exportOnlyLocals in css-loader enabled: errors 1`] = `Array []`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "styleTag" and namedExport is "true" and exportOnlyLocals in css-loader enabled: warnings 1`] = `
Array [
  "ModuleDependencyWarning: export 'default' (imported as 'content') was not found in '!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./es-modules.css' (possible exports: bar, baz, foo)",
  "ModuleDependencyWarning: export 'default' (imported as 'content') was not found in '!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./es-modules.css' (possible exports: bar, baz, foo)",
  "ModuleDependencyWarning: export 'default' (imported as 'content') was not found in '!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./es-modules.css' (possible exports: bar, baz, foo)",
]
`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "styleTag" and namedExport is "true": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.EwkYfSlfnYBz8E2xTBZva {
  color: red;
}

._3TzX9kdhbEM9NjFT_lLbK_ {
  color: blue;
}

._2zHxuubfFrOL9GmW-Gbppt {
  color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"bar\\": \\"_3TzX9kdhbEM9NjFT_lLbK_\\",
	\\"baz\\": \\"_2zHxuubfFrOL9GmW-Gbppt\\",
	\\"foo\\": \\"EwkYfSlfnYBz8E2xTBZva\\",
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "styleTag" and namedExport is "true": errors 1`] = `Array []`;

exports[`"esModule" option should work when modules enabled and when the "injectType" option is "styleTag" and namedExport is "true": warnings 1`] = `Array []`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "lazySingletonStyleTag" and CommonJS module syntax used: DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
  color: red;
}

.bar {
  color: blue;
}

.baz {
  color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"0\\": [
		\\"../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./es-modules.css\\",
		\\".foo {\\\\n  color: red;\\\\n}\\\\n\\\\n.bar {\\\\n  color: blue;\\\\n}\\\\n\\\\n.baz {\\\\n  color: coral;\\\\n}\\\\n\\",
		\\"\\"
	],
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "lazySingletonStyleTag" and CommonJS module syntax used: errors 1`] = `Array []`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "lazySingletonStyleTag" and CommonJS module syntax used: warnings 1`] = `Array []`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "lazySingletonStyleTag" and ES module syntax used: DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
  color: red;
}

.bar {
  color: blue;
}

.baz {
  color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "lazySingletonStyleTag" and ES module syntax used: errors 1`] = `Array []`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "lazySingletonStyleTag" and ES module syntax used: warnings 1`] = `Array []`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "lazySingletonStyleTag": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
  color: red;
}

.bar {
  color: blue;
}

.baz {
  color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "lazySingletonStyleTag": errors 1`] = `Array []`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "lazySingletonStyleTag": warnings 1`] = `Array []`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "lazyStyleTag" and CommonJS module syntax used: DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
  color: red;
}

.bar {
  color: blue;
}

.baz {
  color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"0\\": [
		\\"../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./es-modules.css\\",
		\\".foo {\\\\n  color: red;\\\\n}\\\\n\\\\n.bar {\\\\n  color: blue;\\\\n}\\\\n\\\\n.baz {\\\\n  color: coral;\\\\n}\\\\n\\",
		\\"\\"
	],
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "lazyStyleTag" and CommonJS module syntax used: errors 1`] = `Array []`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "lazyStyleTag" and CommonJS module syntax used: warnings 1`] = `Array []`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "lazyStyleTag" and ES module syntax used: DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
  color: red;
}

.bar {
  color: blue;
}

.baz {
  color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "lazyStyleTag" and ES module syntax used: errors 1`] = `Array []`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "lazyStyleTag" and ES module syntax used: warnings 1`] = `Array []`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "lazyStyleTag": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
  color: red;
}

.bar {
  color: blue;
}

.baz {
  color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "lazyStyleTag": errors 1`] = `Array []`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "lazyStyleTag": warnings 1`] = `Array []`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "linkTag" and CommonJS module syntax used: DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<link rel=\\"stylesheet\\" href=\\"es-modules.css\\"></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "linkTag" and CommonJS module syntax used: errors 1`] = `Array []`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "linkTag" and CommonJS module syntax used: warnings 1`] = `Array []`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "linkTag" and ES module syntax used: DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<link rel=\\"stylesheet\\" href=\\"es-modules.css\\"></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "linkTag" and ES module syntax used: errors 1`] = `Array []`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "linkTag" and ES module syntax used: warnings 1`] = `Array []`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "linkTag": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<link rel=\\"stylesheet\\" href=\\"es-modules.css\\"></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "linkTag": errors 1`] = `Array []`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "linkTag": warnings 1`] = `Array []`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "singletonStyleTag" and CommonJS module syntax used: DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
  color: red;
}

.bar {
  color: blue;
}

.baz {
  color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"0\\": [
		\\"../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./es-modules.css\\",
		\\".foo {\\\\n  color: red;\\\\n}\\\\n\\\\n.bar {\\\\n  color: blue;\\\\n}\\\\n\\\\n.baz {\\\\n  color: coral;\\\\n}\\\\n\\",
		\\"\\"
	],
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "singletonStyleTag" and CommonJS module syntax used: errors 1`] = `Array []`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "singletonStyleTag" and CommonJS module syntax used: warnings 1`] = `Array []`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "singletonStyleTag" and ES module syntax used: DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
  color: red;
}

.bar {
  color: blue;
}

.baz {
  color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "singletonStyleTag" and ES module syntax used: errors 1`] = `Array []`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "singletonStyleTag" and ES module syntax used: warnings 1`] = `Array []`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "singletonStyleTag": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
  color: red;
}

.bar {
  color: blue;
}

.baz {
  color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "singletonStyleTag": errors 1`] = `Array []`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "singletonStyleTag": warnings 1`] = `Array []`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "styleTag" and CommonJS module syntax used: DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
  color: red;
}

.bar {
  color: blue;
}

.baz {
  color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"0\\": [
		\\"../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./es-modules.css\\",
		\\".foo {\\\\n  color: red;\\\\n}\\\\n\\\\n.bar {\\\\n  color: blue;\\\\n}\\\\n\\\\n.baz {\\\\n  color: coral;\\\\n}\\\\n\\",
		\\"\\"
	],
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "styleTag" and CommonJS module syntax used: errors 1`] = `Array []`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "styleTag" and CommonJS module syntax used: warnings 1`] = `Array []`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "styleTag" and ES module syntax used: DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
  color: red;
}

.bar {
  color: blue;
}

.baz {
  color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "styleTag" and ES module syntax used: errors 1`] = `Array []`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "styleTag" and ES module syntax used: warnings 1`] = `Array []`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "styleTag": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
  color: red;
}

.bar {
  color: blue;
}

.baz {
  color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "styleTag": errors 1`] = `Array []`;

exports[`"esModule" option should work when not specified and when the "injectType" option is "styleTag": warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "lazySingletonStyleTag" and CommonJS module syntax used: DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
  color: red;
}

.bar {
  color: blue;
}

.baz {
  color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"0\\": [
		\\"../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./es-modules.css\\",
		\\".foo {\\\\n  color: red;\\\\n}\\\\n\\\\n.bar {\\\\n  color: blue;\\\\n}\\\\n\\\\n.baz {\\\\n  color: coral;\\\\n}\\\\n\\",
		\\"\\"
	],
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "lazySingletonStyleTag" and CommonJS module syntax used: errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "lazySingletonStyleTag" and CommonJS module syntax used: warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "lazySingletonStyleTag" and ES module syntax used: DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
  color: red;
}

.bar {
  color: blue;
}

.baz {
  color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "lazySingletonStyleTag" and ES module syntax used: errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "lazySingletonStyleTag" and ES module syntax used: warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "lazySingletonStyleTag": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
  color: red;
}

.bar {
  color: blue;
}

.baz {
  color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "lazySingletonStyleTag": errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "lazySingletonStyleTag": warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "lazyStyleTag" and CommonJS module syntax used: DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
  color: red;
}

.bar {
  color: blue;
}

.baz {
  color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"0\\": [
		\\"../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./es-modules.css\\",
		\\".foo {\\\\n  color: red;\\\\n}\\\\n\\\\n.bar {\\\\n  color: blue;\\\\n}\\\\n\\\\n.baz {\\\\n  color: coral;\\\\n}\\\\n\\",
		\\"\\"
	],
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "lazyStyleTag" and CommonJS module syntax used: errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "lazyStyleTag" and CommonJS module syntax used: warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "lazyStyleTag" and ES module syntax used: DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
  color: red;
}

.bar {
  color: blue;
}

.baz {
  color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "lazyStyleTag" and ES module syntax used: errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "lazyStyleTag" and ES module syntax used: warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "lazyStyleTag": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
  color: red;
}

.bar {
  color: blue;
}

.baz {
  color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "lazyStyleTag": errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "lazyStyleTag": warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "linkTag" and CommonJS module syntax used: DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<link rel=\\"stylesheet\\" href=\\"es-modules.css\\"></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "linkTag" and CommonJS module syntax used: errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "linkTag" and CommonJS module syntax used: warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "linkTag" and ES module syntax used: DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<link rel=\\"stylesheet\\" href=\\"es-modules.css\\"></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "linkTag" and ES module syntax used: errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "linkTag" and ES module syntax used: warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "linkTag": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<link rel=\\"stylesheet\\" href=\\"es-modules.css\\"></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "linkTag": errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "linkTag": warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "singletonStyleTag" and CommonJS module syntax used: DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
  color: red;
}

.bar {
  color: blue;
}

.baz {
  color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"0\\": [
		\\"../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./es-modules.css\\",
		\\".foo {\\\\n  color: red;\\\\n}\\\\n\\\\n.bar {\\\\n  color: blue;\\\\n}\\\\n\\\\n.baz {\\\\n  color: coral;\\\\n}\\\\n\\",
		\\"\\"
	],
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "singletonStyleTag" and CommonJS module syntax used: errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "singletonStyleTag" and CommonJS module syntax used: warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "singletonStyleTag" and ES module syntax used: DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
  color: red;
}

.bar {
  color: blue;
}

.baz {
  color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "singletonStyleTag" and ES module syntax used: errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "singletonStyleTag" and ES module syntax used: warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "singletonStyleTag": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
  color: red;
}

.bar {
  color: blue;
}

.baz {
  color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "singletonStyleTag": errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "singletonStyleTag": warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "styleTag" and CommonJS module syntax used: DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
  color: red;
}

.bar {
  color: blue;
}

.baz {
  color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"0\\": [
		\\"../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./es-modules.css\\",
		\\".foo {\\\\n  color: red;\\\\n}\\\\n\\\\n.bar {\\\\n  color: blue;\\\\n}\\\\n\\\\n.baz {\\\\n  color: coral;\\\\n}\\\\n\\",
		\\"\\"
	],
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "styleTag" and CommonJS module syntax used: errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "styleTag" and CommonJS module syntax used: warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "styleTag" and ES module syntax used: DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
  color: red;
}

.bar {
  color: blue;
}

.baz {
  color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "styleTag" and ES module syntax used: errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "styleTag" and ES module syntax used: warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "styleTag": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
  color: red;
}

.bar {
  color: blue;
}

.baz {
  color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "styleTag": errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false" and when the "injectType" option is "styleTag": warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "lazySingletonStyleTag" and CommonJS module syntax used: DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
  color: red;
}

.bar {
  color: blue;
}

.baz {
  color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"0\\": [
		\\"../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./es-modules.css\\",
		\\".foo {\\\\n  color: red;\\\\n}\\\\n\\\\n.bar {\\\\n  color: blue;\\\\n}\\\\n\\\\n.baz {\\\\n  color: coral;\\\\n}\\\\n\\",
		\\"\\"
	],
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "lazySingletonStyleTag" and CommonJS module syntax used: errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "lazySingletonStyleTag" and CommonJS module syntax used: warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "lazySingletonStyleTag" and ES module syntax used: DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
  color: red;
}

.bar {
  color: blue;
}

.baz {
  color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "lazySingletonStyleTag" and ES module syntax used: errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "lazySingletonStyleTag" and ES module syntax used: warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "lazySingletonStyleTag": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
  color: red;
}

.bar {
  color: blue;
}

.baz {
  color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "lazySingletonStyleTag": errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "lazySingletonStyleTag": warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "lazyStyleTag" and CommonJS module syntax used: DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
  color: red;
}

.bar {
  color: blue;
}

.baz {
  color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"0\\": [
		\\"../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./es-modules.css\\",
		\\".foo {\\\\n  color: red;\\\\n}\\\\n\\\\n.bar {\\\\n  color: blue;\\\\n}\\\\n\\\\n.baz {\\\\n  color: coral;\\\\n}\\\\n\\",
		\\"\\"
	],
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "lazyStyleTag" and CommonJS module syntax used: errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "lazyStyleTag" and CommonJS module syntax used: warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "lazyStyleTag" and ES module syntax used: DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
  color: red;
}

.bar {
  color: blue;
}

.baz {
  color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "lazyStyleTag" and ES module syntax used: errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "lazyStyleTag" and ES module syntax used: warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "lazyStyleTag": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
  color: red;
}

.bar {
  color: blue;
}

.baz {
  color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "lazyStyleTag": errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "lazyStyleTag": warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "linkTag" and CommonJS module syntax used: DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<link rel=\\"stylesheet\\" href=\\"es-modules.css\\"></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "linkTag" and CommonJS module syntax used: errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "linkTag" and CommonJS module syntax used: warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "linkTag" and ES module syntax used: DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<link rel=\\"stylesheet\\" href=\\"es-modules.css\\"></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "linkTag" and ES module syntax used: errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "linkTag" and ES module syntax used: warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "linkTag": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<link rel=\\"stylesheet\\" href=\\"es-modules.css\\"></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "linkTag": errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "linkTag": warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "singletonStyleTag" and CommonJS module syntax used: DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
  color: red;
}

.bar {
  color: blue;
}

.baz {
  color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"0\\": [
		\\"../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./es-modules.css\\",
		\\".foo {\\\\n  color: red;\\\\n}\\\\n\\\\n.bar {\\\\n  color: blue;\\\\n}\\\\n\\\\n.baz {\\\\n  color: coral;\\\\n}\\\\n\\",
		\\"\\"
	],
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "singletonStyleTag" and CommonJS module syntax used: errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "singletonStyleTag" and CommonJS module syntax used: warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "singletonStyleTag" and ES module syntax used: DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
  color: red;
}

.bar {
  color: blue;
}

.baz {
  color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "singletonStyleTag" and ES module syntax used: errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "singletonStyleTag" and ES module syntax used: warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "singletonStyleTag": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
  color: red;
}

.bar {
  color: blue;
}

.baz {
  color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "singletonStyleTag": errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "singletonStyleTag": warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "styleTag" and CommonJS module syntax used: DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
  color: red;
}

.bar {
  color: blue;
}

.baz {
  color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"0\\": [
		\\"../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./es-modules.css\\",
		\\".foo {\\\\n  color: red;\\\\n}\\\\n\\\\n.bar {\\\\n  color: blue;\\\\n}\\\\n\\\\n.baz {\\\\n  color: coral;\\\\n}\\\\n\\",
		\\"\\"
	],
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "styleTag" and CommonJS module syntax used: errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "styleTag" and CommonJS module syntax used: warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "styleTag" and ES module syntax used: DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
  color: red;
}

.bar {
  color: blue;
}

.baz {
  color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "styleTag" and ES module syntax used: errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "styleTag" and ES module syntax used: warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "styleTag": DOM 1`] = `
"<!DOCTYPE html><html><head>
  <title>style-loader test</title>
  <style id=\\"existing-style\\">.existing { color: yellow }</style>
<style>.foo {
  color: red;
}

.bar {
  color: blue;
}

.baz {
  color: coral;
}
</style></head>
<body>
  <h1>Body</h1>
  <div class=\\"target\\"></div>
  <iframe class=\\"iframeTarget\\"></iframe>


<div>
EXPORTED defaultImport:
============================
{}
============================

EXPORTED allImports:
============================
{
	\\"default\\": {}
}
============================
</div></body></html>"
`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "styleTag": errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and when the "injectType" option is "styleTag": warnings 1`] = `Array []`;
